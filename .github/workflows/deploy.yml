name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org/

      - name: Install dependencies
        run: |
          cd frontend
          # Clean install with error handling
          npm ci --prefer-offline --no-audit
          
      - name: Show version info
        run: |
          cd frontend
          echo "üì¶ Current version: $(node -p "require('./package.json').version")"
          echo "üèóÔ∏è Build info: $(node -p "JSON.stringify(require('./package.json').buildInfo || {}, null, 2)")"

      - name: Build
        run: |
          cd frontend
          # Build with error handling
          NODE_ENV=production npm run build

      - name: Prepare for GitHub Pages (disable Jekyll)
        run: |
          touch frontend/dist/.nojekyll
          ls -la frontend/dist/
          echo "üì¶ Files ready for deployment:"
          find frontend/dist/ -type f | head -20

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  deploy-worker:
    runs-on: ubuntu-latest
    # Only run if secrets are configured
    if: ${{ secrets.CLOUDFLARE_API_TOKEN != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worker/package-lock.json
      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org/

      - name: Install worker dependencies
        run: |
          cd worker
          # Clean install with error handling
          npm ci --prefer-offline --no-audit

      - name: Deploy Worker with Secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          cd worker
          
          # Deploy worker first
          echo "üöÄ Deploying worker..."
          npx wrangler deploy
          
          # Then set secrets (only if they exist)
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "üì° Setting OpenAI API key..."
            echo "${{ secrets.OPENAI_API_KEY }}" | npx wrangler secret put OPENAI_API_KEY
          fi
          
          if [ -n "${{ secrets.JWT_SECRET }}" ]; then
            echo "üîê Setting JWT secret..."
            echo "${{ secrets.JWT_SECRET }}" | npx wrangler secret put JWT_SECRET
          fi
          
          echo "‚úÖ Worker deployment completed!"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
